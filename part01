protocol with a node ip address so of the node not the service and the port number of the service which is good for test purposes if you want to test something very fast but not for the end product so usually you would want your ul to look like this if you want to talk to your application with
a secure protocol and domine and for that there is another component of coburn it is called in chris so is that of service the request goes first to rest and he does the forwarding then to the service so now we saw some of the very basic components of coburn is and as you see this is a very
simple setup we just have a one server and a couple of containers running and some services nothing really special were communities advantages or the actual cool features really come forward but we gonna get their step by step so let's continue
so as we said pots communicate with each other using a service some my application will have a database endpoint let's say called hmong to be service that uses to communicate with the database but where do you configure usually this database your l or
in point usually you would do it in application on properties file or as some kind of external environmental variable but usually it's inside of the built image of the application so for example if the endpoints of the service or serve his name in this case changed to monger to be
you would have to adjust that you are l in the application so usually you'd have to rebuild the application with a new version and you have to push it to the repository and now you'll have to pull that new image in your pod and restart the whole thing so a little bit tedious for a small change like day
database you are else so for that purpose communities has a component cold configure map so what he does is is basically your external configuration to your application so convict map would usually contain configuration data like your else of database or some other services that use and in
eddie's you just connected to the pod so that pot actually gets the data that conflict map contains and now if he changed the name of the service the and point of the service uses adjust the conflict map and that's it you have to build a new image and have to go through this whole cycle now part of the
the external configuration can also be database username and password right which may also change in the application deployment process but putting a password or other credentials in a conflict map in a plain text format would be insecure even though it's an external conflagration so for these per
opus communities has another component cold secret so secret is just like convict map but the difference is that it's used to store secret data credentials for example and it's stored not in a plain text format of course but in base sixty four encoded format but of course
