0
So before we dive into branching, let's just talk for like 10 seconds, probably 30 seconds about how
jet works at a very, very basic level.
22
When we make a commit, each commit gets this weird looking hash, this long series of numbers and letters
that is supposed to be unique that corresponds to the contents of a commit.
Plus a couple of other things.
33
that is supposed to be unique that corresponds to the contents of a commit.
Plus a couple of other things.
If you don't know about hashing functions, don't worry.
You don't need to understand any of it in order to use git.
I'd say most people don't who still use Git daily.
I will have a video in sort of an appendix at the end of the course or towards the end.
That goes into some more details about how the hashing actually works.
77
I'd say most people don't who still use Git daily.
I will have a video in sort of an appendix at the end of the course or towards the end.
That goes into some more details about how the hashing actually works.
What is hash together, what hashing algorithm is used?
It's called SHA one.
Anyway, all that we need to know is that every commit has this unique hash, this unique identifier
that corresponds to the commits, and each commit references.
At least one parent commit that came before it.
88
I will have a video in sort of an appendix at the end of the course or towards the end.
That goes into some more details about how the hashing actually works.
What is hash together, what hashing algorithm is used?
It's called SHA one.
Anyway, all that we need to know is that every commit has this unique hash, this unique identifier
that corresponds to the commits, and each commit references.
At least one parent commit that came before it.
So here we can see this most recent commit in blue has a commit that came before it, right?
This pink one and before that came this purply blue one.
And that happens to be the initial commit.
It does not have anything before it.
It does not have a parent commit.
That happens the very first time you commit.
So we have this linear history where one commit leads to the next, which leads to the next.
But often when we're working on a real project in the real world, we need to work in multiple contexts
simultaneously.
So imagine I'm working, I don't know, I work at some company, I'm working on a web application and
I'm trying out two different color scheme variations for a website.
And I want to try them both out and figure out which one I like best.
19
